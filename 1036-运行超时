#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
struct patrank{
    long id;
    int grade;
    int final_rank;
    int localtion_number;
    int local_rank;
};
bool sort1(patrank a,patrank b){
    if(a.grade>b.grade)
        return true;
    else if(a.grade==b.grade)
        return a.id<b.id;
    return false;
}
void getfinal(vector<patrank> &total){
    int temp=1,ra=1;
    total[0].final_rank=1;
    for(int i=1;i<total.size();i++){
        if(total[i].grade==total[i-1].grade){
            total[i].final_rank=temp;
            ra++;
        }
        else{
            ra++;
            total[i].final_rank=ra;
            temp=ra;
        }
    }
}
void getlocal(vector<patrank> &vec){
    int temp=1,ra=1;
    vec[0].local_rank=1;
    for(int i=1;i<vec.size();i++){
        if(vec[i].grade==vec[i-1].grade){
            vec[i].local_rank=temp;
            ra++;
        }
        else{
            ra++;
            vec[i].local_rank=ra;
            temp=ra;
        }
    }
}
int find(vector<patrank> total,long id){
    for(int i=0;i<total.size();i++){
        if(id==total[i].id)
            return i;
    }
    return -1;
}
int main(){
    int n;
    cin>>n;
    vector<vector<patrank>> vec(n);
    vector<patrank> total;
    int i=1;
    while(n--){
        int k;
        cin>>k;
        while(k--){
            patrank temp;
            cin>>temp.id>>temp.grade;
            temp.localtion_number=i;
            vec[i-1].push_back(temp);
            total.push_back(temp);
        }
        i++;
    }
    sort(total.begin(),total.end(),sort1);
    for(int i=0;i<vec.size();i++){
        sort(vec[i].begin(),vec[i].end(),sort1);
        getlocal(vec[i]);
    }
    getfinal(total);
    for(int i=0;i<vec.size();i++){
        for(int j=0;j<vec[i].size();j++){
            int k=find(total,vec[i][j].id);
            total[k].local_rank=vec[i][j].local_rank;
        }
    }
    cout<<total.size()<<endl;
    for(int i=0;i<total.size();i++){
        cout<<total[i].id<<' '<<total[i].final_rank<<' '<<total[i].localtion_number<<' '<<total[i].local_rank<<endl;
    }
    return 0;
}
